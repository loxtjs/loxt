---
import Header from '../../components/Header.astro';
import Layout from '../../layout/Layout.astro';
import { Code } from 'astro/components';
---

<Layout title='Reporter - Docs'>
	<Header title='Reporter' description='Create your own themes to log the messages'>
		<Code
			wrap
			code={`
	// Reporters are basically an object, which has to be an instance of a superclass of the Reporter class. 
	// We will cover the different ways to create a reporter and how to use it in our logger.

	import { Reporter, colors } from 'loxt';

	const salmon = new Reporter({
		info: \`\${colors.bold(colors.blue('info'))}: \${colors.dim('$message')}\`,
		warn: \`\${colors.bold(colors.yellow('warning'))}: \${colors.dim('$message')}\`,
		ready: \`\${colors.green('ready')} \${colors.dim('$message')}\`,
		start: \`\${colors.green('start')} \${colors.dim('$message')}\`,
		success: \`\${colors.bold(colors.green('success'))}: \${colors.dim('$message')}\`,
		error: {
			name: colors.bold(colors.red('$name:')),
			message: colors.dim('$message'),
		},
	});



	/* But maybe you must add some extra logic to the reporter, 
	for that you can make a new class that extends the reporter class and add the right getters. */
	// We call this class an Extension, as it extends our basic theme reporter and adds new functionality.

	class MyCustomExtension extends Reporter {
		get info() {
			return 'info: $message';
		}
					
		get warn() {
			return 'warn: $message';
		}
					
		get ready() {
			return 'ready $message';
		}
					
		get start() {
			return 'start $message';
		}
					
		get success() {
			return 'success: $message';
		}
					
		get error() {
			return {
				name: '$name'
				message: '$message'
			};
		}
	}
		`}
			lang='ts'
			theme='one-dark-pro'
		/>
	</Header>
</Layout>
